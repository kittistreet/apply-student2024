<?php
require 'connect-pdo.php';
header('Content-Type: application/json; charset=utf-8');

// ‡πÑ‡∏ü‡∏•‡πå Log
$logFile = 'payment_log.log';

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô Log
function writeLog($message)
{
    global $logFile;
    $date = date('Y-m-d H:i:s');
    file_put_contents($logFile, "[$date] $message" . PHP_EOL, FILE_APPEND);
}


// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö API Key
function verifyApiKey($apiKey, $conn)
{
    $query = "SELECT id FROM api_keys WHERE api_key = :api_key LIMIT 1";
    $stmt = $conn->prepare($query);
    $stmt->execute(['api_key' => $apiKey]);
    return $stmt->fetch(PDO::FETCH_ASSOC) !== false;
}

// ‡∏î‡∏∂‡∏á API Key ‡∏à‡∏≤‡∏Å Header
$headers = getallheaders();
$receivedApiKey = $headers['Authorization'] ?? '';

// ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö API Key
if (!preg_match('/^Bearer\s+(.+)$/', $receivedApiKey, $matches)) {
    http_response_code(401);
    die(json_encode(["status" => "error", "message" => "Unauthorized - API Key missing"]));
}

$apiKey = $matches[1];

if (!verifyApiKey($apiKey, $conn)) {
    http_response_code(403);
    die(json_encode(["status" => "error", "message" => "Forbidden - Invalid API Key"]));
}

// ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• JSON ‡∏à‡∏≤‡∏Å Payment Gateway
$input = file_get_contents("php://input");
$data = json_decode($input, true);

// ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö JSON
if (json_last_error() !== JSON_ERROR_NONE) {
    http_response_code(400);
    writeLog("‚ùå Invalid JSON format");
    die(json_encode(["status" => "error", "message" => "‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• JSON ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á"]));
}

// ‡∏î‡∏∂‡∏á‡∏Ñ‡πà‡∏≤‡∏à‡∏≤‡∏Å JSON ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢
$ApplicantID = $data['ApplicantID'] ?? '';
$amountPaid = $data['amount'] ?? 0;
$paymentStatus = $data['status'] ?? '';

// ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Ñ‡πà‡∏≤‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
if (empty($ApplicantID) || empty($amountPaid) || empty($paymentStatus)) {
    http_response_code(400);
    writeLog("‚ö†Ô∏è Incomplete data received: " . json_encode($data));
    die(json_encode(["status" => "error", "message" => "‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô"]));
}

// ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ ApplicantID ‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç
if (!ctype_digit($ApplicantID)) {
    http_response_code(400);
    writeLog("‚ö†Ô∏è Invalid ApplicantID: $ApplicantID");
    die(json_encode(["status" => "error", "message" => "ApplicantID ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á"]));
}

// ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ amountPaid ‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç ‡πÅ‡∏•‡∏∞‡πÑ‡∏°‡πà‡∏ï‡∏¥‡∏î‡∏•‡∏ö
if (!is_numeric($amountPaid) || $amountPaid <= 0) {
    http_response_code(400);
    writeLog("‚ö†Ô∏è Invalid amountPaid: $amountPaid");
    die(json_encode(["status" => "error", "message" => "‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á"]));
}

// üîç ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô
$query = "SELECT * FROM application_payments WHERE ApplicantID = ?";
$stmt = $conn->prepare($query);
$stmt->execute([$ApplicantID]);
$paymentData = $stmt->fetch(PDO::FETCH_ASSOC);

if (!$paymentData) {
    http_response_code(404);
    writeLog("‚ö†Ô∏è Payment request not found for ApplicantID: $ApplicantID");
    die(json_encode(["status" => "error", "message" => "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô"]));
}

// ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
if ($paymentData['status'] === 'completed') {
    http_response_code(409);
    writeLog("‚ö†Ô∏è Payment already completed for ApplicantID: $ApplicantID");
    die(json_encode(["status" => "error", "message" => "‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡∏ô‡∏µ‡πâ‡∏ñ‡∏π‡∏Å‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß"]));
}

// ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô
if ((float)$paymentData['amount'] !== (float)$amountPaid) {
    http_response_code(400);
    writeLog("‚ö†Ô∏è Incorrect payment amount for ApplicantID: $ApplicantID, Expected: {$paymentData['amount']}, Received: $amountPaid");
    die(json_encode(["status" => "error", "message" => "‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á"]));
}

// ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÄ‡∏ß‡∏•‡∏≤‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏‡∏Ç‡∏≠‡∏á QR Code
$currentTimestamp = time();
$expiryTimestamp = strtotime($paymentData['expiry_time']);

if ($currentTimestamp > $expiryTimestamp) {
    http_response_code(410);
    writeLog("‚ö†Ô∏è Expired QR Code for ApplicantID: $ApplicantID");
    die(json_encode(["status" => "error", "message" => "QR Code ‡∏ô‡∏µ‡πâ‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏‡πÅ‡∏•‡πâ‡∏ß"]));
}

// ‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏õ‡πá‡∏ô "completed"
$updateQuery = "UPDATE application_payments SET status = 'completed' WHERE ApplicantID = ?";
$updateStmt = $conn->prepare($updateQuery);
$updateSuccess = $updateStmt->execute([$ApplicantID]);

if (!$updateSuccess) {
    http_response_code(500);
    writeLog("‚ùå Failed to update payment status for ApplicantID: $ApplicantID");
    die(json_encode(["status" => "error", "message" => "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•"]));
}

// ‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
writeLog("‚úÖ Payment successful for ApplicantID: $ApplicantID, Amount: $amountPaid");

// ‚úÖ ‡∏™‡πà‡∏á Response ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
http_response_code(201);
echo json_encode(["status" => "success", "message" => "‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à"]);
?>
